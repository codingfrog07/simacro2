{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/Pages/Viewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Viewer = () => {\n  _s();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer();\n    const canvas = document.getElementById(\"canvas\");\n    renderer.setSize(300, 300);\n    canvas.appendChild(renderer.domElement);\n    const camera = new THREE.PerspectiveCamera(30, 1, 0.1, 1000);\n    camera.position.z = 5;\n    const loader = new GLTFLoader();\n    loader.load(\"shiba/scene.gltf\", function (gltf) {\n      const shibaModel = gltf.scene;\n      scene.add(shibaModel);\n\n      // Add lighting (optional)\n      const ambientLight = new THREE.AmbientLight(0x404040);\n      scene.add(ambientLight);\n      const directionalLight = new THREE.DirectionalLight(0xffffff);\n      directionalLight.position.set(1, 1, 1);\n      scene.add(directionalLight);\n      const animate = () => {\n        requestAnimationFrame(animate);\n\n        // Add any model interactions or animations here if needed\n\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewerWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Viewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","THREE","GLTFLoader","jsxDEV","_jsxDEV","Viewer","_s","scene","Scene","renderer","WebGLRenderer","canvas","document","getElementById","setSize","appendChild","domElement","camera","PerspectiveCamera","position","z","loader","load","gltf","shibaModel","add","ambientLight","AmbientLight","directionalLight","DirectionalLight","set","animate","requestAnimationFrame","render","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/Pages/Viewer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nconst Viewer = () => {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer();\n    const canvas = document.getElementById(\"canvas\");\n    renderer.setSize(300, 300);\n    canvas.appendChild(renderer.domElement);\n\n    const camera = new THREE.PerspectiveCamera(30, 1, 0.1, 1000);\n    camera.position.z = 5;\n\n    const loader = new GLTFLoader();\n    loader.load(\"shiba/scene.gltf\", function (gltf) {\n      const shibaModel = gltf.scene;\n      scene.add(shibaModel);\n\n      // Add lighting (optional)\n      const ambientLight = new THREE.AmbientLight(0x404040);\n      scene.add(ambientLight);\n      const directionalLight = new THREE.DirectionalLight(0xffffff);\n      directionalLight.position.set(1, 1, 1);\n      scene.add(directionalLight);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n\n        // Add any model interactions or animations here if needed\n\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n  }, []);\n\n  return (\n    <div className=\"viewerWrapper\">\n      <div className=\"viewer-content\">\n        <div id=\"canvas\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Viewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnBN,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAG,IAAIR,KAAK,CAACS,aAAa,CAAC,CAAC;IAC1C,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChDJ,QAAQ,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAC1BH,MAAM,CAACI,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC;IAEvC,MAAMC,MAAM,GAAG,IAAIhB,KAAK,CAACiB,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;IAC5DD,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,CAAC;IAErB,MAAMC,MAAM,GAAG,IAAInB,UAAU,CAAC,CAAC;IAC/BmB,MAAM,CAACC,IAAI,CAAC,kBAAkB,EAAE,UAAUC,IAAI,EAAE;MAC9C,MAAMC,UAAU,GAAGD,IAAI,CAAChB,KAAK;MAC7BA,KAAK,CAACkB,GAAG,CAACD,UAAU,CAAC;;MAErB;MACA,MAAME,YAAY,GAAG,IAAIzB,KAAK,CAAC0B,YAAY,CAAC,QAAQ,CAAC;MACrDpB,KAAK,CAACkB,GAAG,CAACC,YAAY,CAAC;MACvB,MAAME,gBAAgB,GAAG,IAAI3B,KAAK,CAAC4B,gBAAgB,CAAC,QAAQ,CAAC;MAC7DD,gBAAgB,CAACT,QAAQ,CAACW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACtCvB,KAAK,CAACkB,GAAG,CAACG,gBAAgB,CAAC;MAE3B,MAAMG,OAAO,GAAGA,CAAA,KAAM;QACpBC,qBAAqB,CAACD,OAAO,CAAC;;QAE9B;;QAEAtB,QAAQ,CAACwB,MAAM,CAAC1B,KAAK,EAAEU,MAAM,CAAC;MAChC,CAAC;MAEDc,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA;IAAK8B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B/B,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B/B,OAAA;QAAKgC,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA1CID,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}