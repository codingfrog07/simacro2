{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\n// client/src/ModelViewer.js\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [scalingUp, setScalingUp] = useState(true); // 크기 조절 방향을 나타내는 상태 추가\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 5);\n    scene.background = new THREE.Color(\"black\");\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      const loadedModel = gltf.scene;\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        if (scalingUp) {\n          // 크기를 키우는 중\n          if (modelScale < 2) {\n            setModelScale(modelScale + 0.01); // 크기를 키웁니다.\n          } else {\n            setScalingUp(false); // 크기 키우기를 멈추고 줄이기로 전환\n          }\n        } else {\n          // 크기를 줄이는 중\n          if (modelScale > 0.1) {\n            setModelScale(modelScale - 0.01); // 크기를 줄입니다.\n          } else {\n            setScalingUp(true); // 크기 줄이기를 멈추고 키우기로 전환\n          }\n        }\n\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n  }, [model, modelScale]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      overflow: \"hidden\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"54x+wZJ7SNBLgz5V/sOxe+YTSM8=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","scalingUp","setScalingUp","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","background","Color","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","loader","load","gltf","loadedModel","scale","add","animate","requestAnimationFrame","render","ref","style","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["// client/src/ModelViewer.js\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [scalingUp, setScalingUp] = useState(true); // 크기 조절 방향을 나타내는 상태 추가\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 5);\n\n    scene.background = new THREE.Color(\"black\");\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      const loadedModel = gltf.scene;\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        if (scalingUp) {\n          // 크기를 키우는 중\n          if (modelScale < 2) {\n            setModelScale(modelScale + 0.01); // 크기를 키웁니다.\n          } else {\n            setScalingUp(false); // 크기 키우기를 멈추고 줄이기로 전환\n          }\n        } else {\n          // 크기를 줄이는 중\n          if (modelScale > 0.1) {\n            setModelScale(modelScale - 0.01); // 크기를 줄입니다.\n          } else {\n            setScalingUp(true); // 크기 줄이기를 멈추고 키우기로 전환\n          }\n        }\n\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n  }, [model, modelScale]);\n\n  return <div ref={containerRef} style={{ overflow: \"hidden\" }}></div>;\n}\n\nexport default ModelViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}