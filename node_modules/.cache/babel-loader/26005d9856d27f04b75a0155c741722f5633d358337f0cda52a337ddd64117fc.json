{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\n// client/src/ModelViewer.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model,\n  displayStaticModel\n}) {\n  _s();\n  const containerRef = useRef();\n  const [rotateModel, setRotateModel] = useState(true); // 모델 회전 상태 추가\n  let scene, camera, renderer, modelObject;\n  useEffect(() => {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      modelObject = gltf.scene;\n      scene.add(modelObject);\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (modelObject) {\n        if (rotateModel) {\n          modelObject.rotation.x += 0.005;\n          modelObject.rotation.y += 0.005;\n        }\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, [model, rotateModel]);\n\n  // 모델 회전 중인 경우에만 렌더링\n  if (!displayStaticModel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRotateModel(!rotateModel),\n        children: rotateModel ? \"Stop Rotation\" : \"Resume Rotation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null; // displayStaticModel이 true인 경우 아무것도 렌더링하지 않음\n  }\n}\n_s(ModelViewer, \"HuFuoMELajj7EMSuuu5pRBBZNic=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","displayStaticModel","_s","containerRef","rotateModel","setRotateModel","scene","camera","renderer","modelObject","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","current","appendChild","domElement","loader","load","gltf","add","animate","requestAnimationFrame","rotation","x","y","render","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["// client/src/ModelViewer.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model, displayStaticModel }) {\n  const containerRef = useRef();\n  const [rotateModel, setRotateModel] = useState(true); // 모델 회전 상태 추가\n  let scene, camera, renderer, modelObject;\n\n  useEffect(() => {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      modelObject = gltf.scene;\n      scene.add(modelObject);\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (modelObject) {\n        if (rotateModel) {\n          modelObject.rotation.x += 0.005;\n          modelObject.rotation.y += 0.005;\n        }\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [model, rotateModel]);\n\n  // 모델 회전 중인 경우에만 렌더링\n  if (!displayStaticModel) {\n    return (\n      <div ref={containerRef}>\n        {/* 모델 회전 상태를 토글하는 버튼 */}\n        <button onClick={() => setRotateModel(!rotateModel)}>\n          {rotateModel ? \"Stop Rotation\" : \"Resume Rotation\"}\n        </button>\n      </div>\n    );\n  } else {\n    return null; // displayStaticModel이 true인 경우 아무것도 렌더링하지 않음\n  }\n}\n\nexport default ModelViewer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAMC,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,IAAIY,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW;EAExCjB,SAAS,CAAC,MAAM;IACdc,KAAK,GAAG,IAAIX,KAAK,CAACe,KAAK,CAAC,CAAC;IACzBH,MAAM,GAAG,IAAIZ,KAAK,CAACgB,iBAAiB,CAClC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDP,MAAM,CAACQ,QAAQ,CAACC,CAAC,GAAG,CAAC;IACrBR,QAAQ,GAAG,IAAIb,KAAK,CAACsB,aAAa,CAAC,CAAC;IACpCT,QAAQ,CAACU,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDX,YAAY,CAACgB,OAAO,CAACC,WAAW,CAACZ,QAAQ,CAACa,UAAU,CAAC;IAErD,MAAMC,MAAM,GAAG,IAAI1B,UAAU,CAAC,CAAC;IAC/B0B,MAAM,CAACC,IAAI,CAACvB,KAAK,EAAGwB,IAAI,IAAK;MAC3Bf,WAAW,GAAGe,IAAI,CAAClB,KAAK;MACxBA,KAAK,CAACmB,GAAG,CAAChB,WAAW,CAAC;IACxB,CAAC,CAAC;IAEF,MAAMiB,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAE9B,IAAIjB,WAAW,EAAE;QACf,IAAIL,WAAW,EAAE;UACfK,WAAW,CAACmB,QAAQ,CAACC,CAAC,IAAI,KAAK;UAC/BpB,WAAW,CAACmB,QAAQ,CAACE,CAAC,IAAI,KAAK;QACjC;MACF;MAEAtB,QAAQ,CAACuB,MAAM,CAACzB,KAAK,EAAEC,MAAM,CAAC;IAChC,CAAC;IAEDmB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAAC1B,KAAK,EAAEI,WAAW,CAAC,CAAC;;EAExB;EACA,IAAI,CAACH,kBAAkB,EAAE;IACvB,oBACEH,OAAA;MAAKkC,GAAG,EAAE7B,YAAa;MAAA8B,QAAA,eAErBnC,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAAC,CAACD,WAAW,CAAE;QAAA6B,QAAA,EACjD7B,WAAW,GAAG,eAAe,GAAG;MAAiB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC,MAAM;IACL,OAAO,IAAI,CAAC,CAAC;EACf;AACF;AAACpC,EAAA,CArDQH,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAuDpB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}