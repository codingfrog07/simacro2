{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\n// client/src/ModelViewer.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [loading, setLoading] = useState(true); // 이미지 로딩 상태 추가\n  let scene, camera, renderer, modelObject;\n  useEffect(() => {\n    // 초기화 (이펙트가 한 번만 실행되도록 함)\n    if (!loading) return;\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // 모델 로드\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      modelObject = gltf.scene;\n      scene.add(modelObject);\n      setLoading(false); // 이미지 로딩이 완료되었음을 표시\n    });\n  }, [model, loading]);\n\n  // 이미지 로딩 중이면 로딩 스피너 또는 로딩 메시지 표시\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"A9VkNZWB04NBB4BE/4g7MHPbcU4=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","loading","setLoading","scene","camera","renderer","modelObject","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","current","appendChild","domElement","loader","load","gltf","add","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["// client/src/ModelViewer.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [loading, setLoading] = useState(true); // 이미지 로딩 상태 추가\n  let scene, camera, renderer, modelObject;\n\n  useEffect(() => {\n    // 초기화 (이펙트가 한 번만 실행되도록 함)\n    if (!loading) return;\n\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // 모델 로드\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      modelObject = gltf.scene;\n      scene.add(modelObject);\n      setLoading(false); // 이미지 로딩이 완료되었음을 표시\n    });\n  }, [model, loading]);\n\n  // 이미지 로딩 중이면 로딩 스피너 또는 로딩 메시지 표시\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return <div ref={containerRef}></div>;\n}\n\nexport default ModelViewer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGT,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,IAAIW,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW;EAExChB,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACW,OAAO,EAAE;IAEdE,KAAK,GAAG,IAAIV,KAAK,CAACc,KAAK,CAAC,CAAC;IACzBH,MAAM,GAAG,IAAIX,KAAK,CAACe,iBAAiB,CAClC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDP,MAAM,CAACQ,QAAQ,CAACC,CAAC,GAAG,CAAC;IACrBR,QAAQ,GAAG,IAAIZ,KAAK,CAACqB,aAAa,CAAC,CAAC;IACpCT,QAAQ,CAACU,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDX,YAAY,CAACgB,OAAO,CAACC,WAAW,CAACZ,QAAQ,CAACa,UAAU,CAAC;;IAErD;IACA,MAAMC,MAAM,GAAG,IAAIzB,UAAU,CAAC,CAAC;IAC/ByB,MAAM,CAACC,IAAI,CAACtB,KAAK,EAAGuB,IAAI,IAAK;MAC3Bf,WAAW,GAAGe,IAAI,CAAClB,KAAK;MACxBA,KAAK,CAACmB,GAAG,CAAChB,WAAW,CAAC;MACtBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,KAAK,EAAEG,OAAO,CAAC,CAAC;;EAEpB;EACA,IAAIA,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBAAO/B,OAAA;IAAKgC,GAAG,EAAE5B;EAAa;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvC;AAAC5B,EAAA,CApCQF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}