{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [modelRotation, setModelRotation] = useState({\n    x: 0,\n    y: 0\n  });\n  const [loadedModel, setLoadedModel] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\n  const [lightType, setLightType] = useState(\"ambient\"); // 기본값: ambient light\n\n  const handleColorChange = color => {\n    setBackgroundColor(color);\n  };\n  const handleLightTypeChange = type => {\n    setLightType(type);\n  };\n  const rendererRef = useRef();\n  const lightRef = useRef();\n  const handleRotate = (axis, angle) => {\n    if (loadedModel) {\n      switch (axis) {\n        case \"up\":\n          loadedModel.rotation.x += angle;\n          break;\n        case \"down\":\n          loadedModel.rotation.x -= angle;\n          break;\n        case \"left\":\n          loadedModel.rotation.y += angle;\n          break;\n        case \"right\":\n          loadedModel.rotation.y -= angle;\n          break;\n        default:\n          break;\n      }\n      setModelRotation({\n        x: loadedModel.rotation.x,\n        y: loadedModel.rotation.y\n      });\n    }\n  };\n  const handleZoomIn = () => {\n    setModelScale(prevScale => prevScale * 1.1);\n  };\n  const handleZoomOut = () => {\n    setModelScale(prevScale => prevScale * 0.9);\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n    const scene = new THREE.Scene();\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 10, 0);\n    directionalLight.target.position.set(-5, 0, 0);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(50, 50, 50);\n    let selectedLight;\n    switch (lightType) {\n      case \"ambient\":\n        selectedLight = ambientLight;\n        break;\n      case \"directional\":\n        selectedLight = directionalLight;\n        break;\n      case \"point\":\n        selectedLight = pointLight;\n        break;\n      default:\n        selectedLight = ambientLight;\n    }\n    scene.add(selectedLight);\n    lightRef.current = selectedLight;\n    const aspectRatio = 1200 / 600;\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    const canvasWidth = 1200;\n    const canvasHeight = 600;\n    renderer.setSize(canvasWidth, canvasHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      const loadedModel = gltf.scene;\n      const bbox = new THREE.Box3().setFromObject(loadedModel); //바운딩 박스 계산\n      const center = bbox.getCenter(new THREE.Vector3());\n      const size = bbox.getSize(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = maxSize / (2 * Math.atan(Math.PI * 75 / 360));\n      const fitWidthDistance = fitHeightDistance / aspectRatio;\n      const distance = Math.max(fitHeightDistance, fitHeightDistance);\n      camera.position.copy(center);\n      camera.position.z += distance; // 적절한 거리로 카메라 위치 설정\n      camera.lookAt(center); // 카메라가 모델을 보도록 설정\n\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      loadedModel.rotation.x = modelRotation.x;\n      loadedModel.rotation.y = modelRotation.y;\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (loadedModel) {\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n      }\n      const currentRenderer = rendererRef.current;\n      currentRenderer.setClearColor(new THREE.Color(backgroundColor));\n      currentRenderer.render(scene, camera);\n    };\n    animate();\n  }, [model, modelScale, backgroundColor, lightType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modelViewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modelViewerMenuWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: backgroundColor,\n        onChange: e => handleColorChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rotateMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtnUp\",\n          onClick: () => handleRotate(\"up\", 0.1),\n          children: \"Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtnDown\",\n          onClick: () => handleRotate(\"down\", 0.1),\n          children: \"Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtnLeft\",\n          onClick: () => handleRotate(\"left\", 0.1),\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtnRight\",\n          onClick: () => handleRotate(\"right\", 0.1),\n          children: \"Right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"division-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoomMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"zoomInBtn\",\n          onClick: handleZoomIn,\n          children: \"Zoom In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"zoomOutBtn\",\n          onClick: handleZoomOut,\n          children: \"Zoom Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"division-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ambientBtn\",\n          onClick: () => handleLightTypeChange(\"ambient\"),\n          children: \"Ambient Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"directionalBtn\",\n          onClick: () => handleLightTypeChange(\"directional\"),\n          children: \"Directional Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pointBtn\",\n          onClick: () => handleLightTypeChange(\"point\"),\n          children: \"Point Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvasModelViewer\",\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelViewer, \"KrzR7LG+/9D9q63k0B0tIW5jAXo=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","modelRotation","setModelRotation","x","y","loadedModel","setLoadedModel","backgroundColor","setBackgroundColor","lightType","setLightType","handleColorChange","color","handleLightTypeChange","type","rendererRef","lightRef","handleRotate","axis","angle","rotation","handleZoomIn","prevScale","handleZoomOut","container","current","firstChild","removeChild","scene","Scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","target","pointLight","PointLight","selectedLight","add","aspectRatio","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","canvasWidth","canvasHeight","setSize","appendChild","domElement","loader","load","gltf","bbox","Box3","setFromObject","center","getCenter","Vector3","size","getSize","maxSize","Math","max","z","fitHeightDistance","atan","PI","fitWidthDistance","distance","copy","lookAt","scale","animate","requestAnimationFrame","currentRenderer","setClearColor","Color","render","className","children","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","ref","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [modelRotation, setModelRotation] = useState({ x: 0, y: 0 });\n  const [loadedModel, setLoadedModel] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\n  const [lightType, setLightType] = useState(\"ambient\"); // 기본값: ambient light\n\n  const handleColorChange = (color) => {\n    setBackgroundColor(color);\n  };\n\n  const handleLightTypeChange = (type) => {\n    setLightType(type);\n  };\n\n  const rendererRef = useRef();\n  const lightRef = useRef();\n\n  const handleRotate = (axis, angle) => {\n    if (loadedModel) {\n      switch (axis) {\n        case \"up\":\n          loadedModel.rotation.x += angle;\n          break;\n        case \"down\":\n          loadedModel.rotation.x -= angle;\n          break;\n        case \"left\":\n          loadedModel.rotation.y += angle;\n          break;\n        case \"right\":\n          loadedModel.rotation.y -= angle;\n          break;\n        default:\n          break;\n      }\n      setModelRotation({\n        x: loadedModel.rotation.x,\n        y: loadedModel.rotation.y,\n      });\n    }\n  };\n\n  const handleZoomIn = () => {\n    setModelScale((prevScale) => prevScale * 1.1);\n  };\n\n  const handleZoomOut = () => {\n    setModelScale((prevScale) => prevScale * 0.9);\n  };\n\n  useEffect(() => {\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n\n    const scene = new THREE.Scene();\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 10, 0);\n    directionalLight.target.position.set(-5, 0, 0);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(50, 50, 50);\n\n    let selectedLight;\n    switch (lightType) {\n      case \"ambient\":\n        selectedLight = ambientLight;\n        break;\n      case \"directional\":\n        selectedLight = directionalLight;\n        break;\n      case \"point\":\n        selectedLight = pointLight;\n        break;\n      default:\n        selectedLight = ambientLight;\n    }\n\n    scene.add(selectedLight);\n    lightRef.current = selectedLight;\n\n    const aspectRatio = 1200 / 600;\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n    });\n    const canvasWidth = 1200;\n    const canvasHeight = 600;\n    renderer.setSize(canvasWidth, canvasHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    rendererRef.current = renderer;\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      const loadedModel = gltf.scene;\n      const bbox = new THREE.Box3().setFromObject(loadedModel); //바운딩 박스 계산\n      const center = bbox.getCenter(new THREE.Vector3());\n      const size = bbox.getSize(new THREE.Vector3());\n\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = maxSize / (2 * Math.atan((Math.PI * 75) / 360));\n      const fitWidthDistance = fitHeightDistance / aspectRatio;\n\n      const distance = Math.max(fitHeightDistance, fitHeightDistance);\n\n      camera.position.copy(center);\n      camera.position.z += distance; // 적절한 거리로 카메라 위치 설정\n      camera.lookAt(center); // 카메라가 모델을 보도록 설정\n\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      loadedModel.rotation.x = modelRotation.x;\n      loadedModel.rotation.y = modelRotation.y;\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (loadedModel) {\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n      }\n\n      const currentRenderer = rendererRef.current;\n      currentRenderer.setClearColor(new THREE.Color(backgroundColor));\n      currentRenderer.render(scene, camera);\n    };\n\n    animate();\n  }, [model, modelScale, backgroundColor, lightType]);\n\n  return (\n    <div className=\"modelViewer\">\n      <div className=\"modelViewerMenuWrap\">\n        <input\n          type=\"color\"\n          value={backgroundColor}\n          onChange={(e) => handleColorChange(e.target.value)}\n        />\n        <div className=\"rotateMenuWrap\">\n          <button\n            className=\"rotateBtnUp\"\n            onClick={() => handleRotate(\"up\", 0.1)}\n          >\n            Up\n          </button>\n          <button\n            className=\"rotateBtnDown\"\n            onClick={() => handleRotate(\"down\", 0.1)}\n          >\n            Down\n          </button>\n          <button\n            className=\"rotateBtnLeft\"\n            onClick={() => handleRotate(\"left\", 0.1)}\n          >\n            Left\n          </button>\n          <button\n            className=\"rotateBtnRight\"\n            onClick={() => handleRotate(\"right\", 0.1)}\n          >\n            Right\n          </button>\n        </div>\n        <div class=\"division-line\"></div>\n        <div className=\"zoomMenuWrap\">\n          <button className=\"zoomInBtn\" onClick={handleZoomIn}>\n            Zoom In\n          </button>\n          <button className=\"zoomOutBtn\" onClick={handleZoomOut}>\n            Zoom Out\n          </button>\n        </div>\n        <div class=\"division-line\"></div>\n        <div className=\"lightMenuWrap\">\n          <button\n            className=\"ambientBtn\"\n            onClick={() => handleLightTypeChange(\"ambient\")}\n          >\n            Ambient Light\n          </button>\n          <button\n            className=\"directionalBtn\"\n            onClick={() => handleLightTypeChange(\"directional\")}\n          >\n            Directional Light\n          </button>\n          <button\n            className=\"pointBtn\"\n            onClick={() => handleLightTypeChange(\"point\")}\n          >\n            Point Light\n          </button>\n        </div>\n      </div>\n      <div className=\"canvasModelViewer\" ref={containerRef}></div>\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}