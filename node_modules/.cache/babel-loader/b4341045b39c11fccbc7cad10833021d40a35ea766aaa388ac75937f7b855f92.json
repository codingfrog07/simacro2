{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(light);\n    scene.background = new THREE.Color(\"white\");\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      const loadedModel = gltf.scene;\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n\n      // 회전 애니메이션 추가\n      const animate = () => {\n        requestAnimationFrame(animate);\n        if (loadedModel) {\n          loadedModel.rotation.x += 0.005;\n          loadedModel.rotation.y += 0.005;\n        }\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n  }, [model, modelScale]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"qiUOTFHZL9RntBBDgV0a2gE9XkU=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","light","AmbientLight","add","background","Color","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","loader","load","gltf","loadedModel","scale","setLoadedModel","animate","requestAnimationFrame","rotation","x","y","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 800);\n\n    const light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(light);\n\n    scene.background = new THREE.Color(\"white\");\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      const loadedModel = gltf.scene;\n\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n\n      // 회전 애니메이션 추가\n      const animate = () => {\n        requestAnimationFrame(animate);\n        if (loadedModel) {\n          loadedModel.rotation.x += 0.005;\n          loadedModel.rotation.y += 0.005;\n        }\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n  }, [model, modelScale]);\n\n  return <div ref={containerRef}></div>;\n}\n\nexport default ModelViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,IAAIV,KAAK,CAACW,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIZ,KAAK,CAACa,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAE9B,MAAMC,KAAK,GAAG,IAAInB,KAAK,CAACoB,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjDV,KAAK,CAACW,GAAG,CAACF,KAAK,CAAC;IAEhBT,KAAK,CAACY,UAAU,GAAG,IAAItB,KAAK,CAACuB,KAAK,CAAC,OAAO,CAAC;IAE3C,MAAMC,QAAQ,GAAG,IAAIxB,KAAK,CAACyB,aAAa,CAAC;MACvCC,SAAS,EAAE;IACb,CAAC,CAAC;IACFF,QAAQ,CAACG,OAAO,CAACb,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDT,YAAY,CAACqB,OAAO,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAErD,MAAMC,MAAM,GAAG,IAAI9B,UAAU,CAAC,CAAC;IAC/B8B,MAAM,CAACC,IAAI,CAAC3B,KAAK,EAAG4B,IAAI,IAAK;MAC3B,MAAMC,WAAW,GAAGD,IAAI,CAACvB,KAAK;MAE9BwB,WAAW,CAACC,KAAK,CAACjB,GAAG,CAACV,UAAU,EAAEA,UAAU,EAAEA,UAAU,CAAC;MACzDE,KAAK,CAACW,GAAG,CAACa,WAAW,CAAC;MACtBE,cAAc,CAACF,WAAW,CAAC;;MAE3B;MACA,MAAMG,OAAO,GAAGA,CAAA,KAAM;QACpBC,qBAAqB,CAACD,OAAO,CAAC;QAC9B,IAAIH,WAAW,EAAE;UACfA,WAAW,CAACK,QAAQ,CAACC,CAAC,IAAI,KAAK;UAC/BN,WAAW,CAACK,QAAQ,CAACE,CAAC,IAAI,KAAK;QACjC;QACAjB,QAAQ,CAACkB,MAAM,CAAChC,KAAK,EAAEE,MAAM,CAAC;MAChC,CAAC;MAEDyB,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChC,KAAK,EAAEG,UAAU,CAAC,CAAC;EAEvB,oBAAOL,OAAA;IAAKwC,GAAG,EAAEpC;EAAa;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvC;AAACzC,EAAA,CAhDQF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAkDpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}