{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\n// client/src/ModelViewer.js\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n\n  // 모델을 렌더링할 씬과 렌더러를 클래스 속성으로 이동\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer();\n\n  // 모델을 초기에 한 번만 로드하도록 useEffect 수정\n  useEffect(() => {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.parse(model, \"\", gltf => {\n      const model = gltf.scene;\n      scene.add(model);\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // 모델 크기 조절\n      if (modelScale !== model.scale.x) {\n        model.scale.set(modelScale, modelScale, modelScale);\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, [model, modelScale]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0.1\",\n      max: \"2\",\n      step: \"0.1\",\n      value: modelScale,\n      onChange: e => setModelScale(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelViewer, \"qiUOTFHZL9RntBBDgV0a2gE9XkU=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","loader","parse","gltf","add","animate","requestAnimationFrame","scale","x","set","render","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["// client/src/ModelViewer.js\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n\n  // 모델을 렌더링할 씬과 렌더러를 클래스 속성으로 이동\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  );\n  const renderer = new THREE.WebGLRenderer();\n\n  // 모델을 초기에 한 번만 로드하도록 useEffect 수정\n  useEffect(() => {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.parse(model, \"\", (gltf) => {\n      const model = gltf.scene;\n      scene.add(model);\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // 모델 크기 조절\n      if (modelScale !== model.scale.x) {\n        model.scale.set(modelScale, modelScale, modelScale);\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [model, modelScale]);\n\n  return (\n    <div>\n      <div ref={containerRef}></div>\n      <input\n        type=\"range\"\n        min=\"0.1\"\n        max=\"2\"\n        step=\"0.1\"\n        value={modelScale}\n        onChange={(e) => setModelScale(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMW,KAAK,GAAG,IAAIV,KAAK,CAACW,KAAK,CAAC,CAAC;EAC/B,MAAMC,MAAM,GAAG,IAAIZ,KAAK,CAACa,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;EACD,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC,CAAC;;EAE1C;EACApB,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDT,YAAY,CAACa,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IAErD,MAAMC,MAAM,GAAG,IAAItB,UAAU,CAAC,CAAC;IAC/BsB,MAAM,CAACC,KAAK,CAACnB,KAAK,EAAE,EAAE,EAAGoB,IAAI,IAAK;MAChC,MAAMpB,KAAK,GAAGoB,IAAI,CAACf,KAAK;MACxBA,KAAK,CAACgB,GAAG,CAACrB,KAAK,CAAC;IAClB,CAAC,CAAC;IAEF,MAAMsB,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;;MAE9B;MACA,IAAInB,UAAU,KAAKH,KAAK,CAACwB,KAAK,CAACC,CAAC,EAAE;QAChCzB,KAAK,CAACwB,KAAK,CAACE,GAAG,CAACvB,UAAU,EAAEA,UAAU,EAAEA,UAAU,CAAC;MACrD;MAEAS,QAAQ,CAACe,MAAM,CAACtB,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDe,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACtB,KAAK,EAAEG,UAAU,CAAC,CAAC;EAEvB,oBACEL,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAK+B,GAAG,EAAE3B;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9BnC,OAAA;MACEoC,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,KAAK;MACTC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAEnC,UAAW;MAClBoC,QAAQ,EAAGC,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChC,EAAA,CApDQF,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAsDpB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}