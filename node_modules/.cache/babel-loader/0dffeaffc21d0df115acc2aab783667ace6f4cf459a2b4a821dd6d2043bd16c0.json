{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [loadedModel, setLoadedModel] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\n  const [lightType, setLightType] = useState(\"ambient\");\n  const handleColorChange = color => {\n    setBackgroundColor(color);\n  };\n  const handleLightTypeChange = type => {\n    setLightType(type);\n  };\n  const handleRotate = (axis, angle) => {\n    if (loadedModel) {\n      switch (axis) {\n        case \"up\":\n          loadedModel.rotation.x += angle;\n          break;\n        case \"down\":\n          loadedModel.rotation.x -= angle;\n          break;\n        case \"left\":\n          loadedModel.rotation.y += angle;\n          break;\n        case \"right\":\n          loadedModel.rotation.y -= angle;\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleScaleUp = () => {\n    setModelScale(prevScale => prevScale * 1.1);\n  };\n  const handleScaleDown = () => {\n    setModelScale(prevScale => prevScale * 0.9);\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n    const scene = new THREE.Scene();\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 10, 0);\n    directionalLight.target.position.set(-5, 0, 0);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(50, 50, 50);\n    let selectedLight;\n    switch (lightType) {\n      case \"ambient\":\n        selectedLight = ambientLight;\n        break;\n      case \"directional\":\n        selectedLight = directionalLight;\n        break;\n      case \"point\":\n        selectedLight = pointLight;\n        break;\n      default:\n        selectedLight = ambientLight;\n    }\n    scene.add(selectedLight);\n    const aspectRatio = 1200 / 600;\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    const canvasWidth = 1200;\n    const canvasHeight = 600;\n    renderer.setSize(canvasWidth, canvasHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      const loadedModel = gltf.scene;\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (loadedModel) {\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n      }\n      const currentRenderer = renderer;\n      currentRenderer.setClearColor(new THREE.Color(backgroundColor));\n      currentRenderer.render(scene, camera);\n    };\n    animate();\n  }, [modelScale, backgroundColor, lightType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modelViewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modelViewerMenuWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: backgroundColor,\n        onChange: e => handleColorChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rotateMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtn\",\n          onClick: () => handleRotate(\"up\", 0.1),\n          children: \"Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtn\",\n          onClick: () => handleRotate(\"down\", 0.1),\n          children: \"Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtn\",\n          onClick: () => handleRotate(\"left\", 0.1),\n          children: \"Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rotateBtn\",\n          onClick: () => handleRotate(\"right\", 0.1),\n          children: \"Right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scaleMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scaleBtn\",\n          onClick: handleScaleUp,\n          children: \"Scale Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scaleBtn\",\n          onClick: handleScaleDown,\n          children: \"Scale Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightMenuWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ambientBtn\",\n          onClick: () => handleLightTypeChange(\"ambient\"),\n          children: \"Ambient Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"directionalBtn\",\n          onClick: () => handleLightTypeChange(\"directional\"),\n          children: \"Directional Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pointBtn\",\n          onClick: () => handleLightTypeChange(\"point\"),\n          children: \"Point Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvasModelViewer\",\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelViewer, \"MSwI04GKCZc29UAxNGshJ6OtP5o=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","loadedModel","setLoadedModel","backgroundColor","setBackgroundColor","lightType","setLightType","handleColorChange","color","handleLightTypeChange","type","handleRotate","axis","angle","rotation","x","y","handleScaleUp","prevScale","handleScaleDown","container","current","firstChild","removeChild","scene","Scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","target","pointLight","PointLight","selectedLight","add","aspectRatio","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","canvasWidth","canvasHeight","setSize","appendChild","domElement","loader","load","gltf","animate","requestAnimationFrame","scale","currentRenderer","setClearColor","Color","render","className","children","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [loadedModel, setLoadedModel] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\n  const [lightType, setLightType] = useState(\"ambient\");\n\n  const handleColorChange = (color) => {\n    setBackgroundColor(color);\n  };\n\n  const handleLightTypeChange = (type) => {\n    setLightType(type);\n  };\n\n  const handleRotate = (axis, angle) => {\n    if (loadedModel) {\n      switch (axis) {\n        case \"up\":\n          loadedModel.rotation.x += angle;\n          break;\n        case \"down\":\n          loadedModel.rotation.x -= angle;\n          break;\n        case \"left\":\n          loadedModel.rotation.y += angle;\n          break;\n        case \"right\":\n          loadedModel.rotation.y -= angle;\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleScaleUp = () => {\n    setModelScale((prevScale) => prevScale * 1.1);\n  };\n\n  const handleScaleDown = () => {\n    setModelScale((prevScale) => prevScale * 0.9);\n  };\n\n  useEffect(() => {\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n\n    const scene = new THREE.Scene();\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 10, 0);\n    directionalLight.target.position.set(-5, 0, 0);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(50, 50, 50);\n\n    let selectedLight;\n    switch (lightType) {\n      case \"ambient\":\n        selectedLight = ambientLight;\n        break;\n      case \"directional\":\n        selectedLight = directionalLight;\n        break;\n      case \"point\":\n        selectedLight = pointLight;\n        break;\n      default:\n        selectedLight = ambientLight;\n    }\n\n    scene.add(selectedLight);\n\n    const aspectRatio = 1200 / 600;\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n    });\n    const canvasWidth = 1200;\n    const canvasHeight = 600;\n    renderer.setSize(canvasWidth, canvasHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      const loadedModel = gltf.scene;\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (loadedModel) {\n        loadedModel.scale.set(modelScale, modelScale, modelScale);\n      }\n\n      const currentRenderer = renderer;\n      currentRenderer.setClearColor(new THREE.Color(backgroundColor));\n      currentRenderer.render(scene, camera);\n    };\n\n    animate();\n  }, [modelScale, backgroundColor, lightType]);\n\n  return (\n    <div className=\"modelViewer\">\n      <div className=\"modelViewerMenuWrap\">\n        <input\n          type=\"color\"\n          value={backgroundColor}\n          onChange={(e) => handleColorChange(e.target.value)}\n        />\n        <div className=\"rotateMenuWrap\">\n          <button className=\"rotateBtn\" onClick={() => handleRotate(\"up\", 0.1)}>\n            Up\n          </button>\n          <button\n            className=\"rotateBtn\"\n            onClick={() => handleRotate(\"down\", 0.1)}\n          >\n            Down\n          </button>\n          <button\n            className=\"rotateBtn\"\n            onClick={() => handleRotate(\"left\", 0.1)}\n          >\n            Left\n          </button>\n          <button\n            className=\"rotateBtn\"\n            onClick={() => handleRotate(\"right\", 0.1)}\n          >\n            Right\n          </button>\n        </div>\n        <div className=\"scaleMenuWrap\">\n          <button className=\"scaleBtn\" onClick={handleScaleUp}>\n            Scale Up\n          </button>\n          <button className=\"scaleBtn\" onClick={handleScaleDown}>\n            Scale Down\n          </button>\n        </div>\n        <div className=\"lightMenuWrap\">\n          <button\n            className=\"ambientBtn\"\n            onClick={() => handleLightTypeChange(\"ambient\")}\n          >\n            Ambient Light\n          </button>\n          <button\n            className=\"directionalBtn\"\n            onClick={() => handleLightTypeChange(\"directional\")}\n          >\n            Directional Light\n          </button>\n          <button\n            className=\"pointBtn\"\n            onClick={() => handleLightTypeChange(\"point\")}\n          >\n            Point Light\n          </button>\n        </div>\n      </div>\n      <div className=\"canvasModelViewer\" ref={containerRef}></div>\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}