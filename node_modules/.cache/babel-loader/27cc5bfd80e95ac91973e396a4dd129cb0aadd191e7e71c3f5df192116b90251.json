{"ast":null,"code":"import * as THREE from \"three\";\nconst CreateParticle = () => {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  camera.position.z = 5;\n  const renderer = new THREE.WebGLRenderer({\n    alpha: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n  const particles = new THREE.Object3D();\n  for (let i = 0; i < 200; i++) {\n    const particle = new THREE.Mesh(new THREE.SphereGeometry(0.01, 3), new THREE.MeshToonMaterial({\n      color: 0x004fff,\n      side: THREE.DoubleSide\n    }) // 흰색 파티클\n    );\n\n    const phi = Math.random() * Math.PI * 2;\n    const theta = Math.random() * Math.PI;\n    const radius = 2; // 원의 반지름\n    particle.position.set(MahRandom(3), mathRandom(3), mathRandom(3));\n    particle.rotation.set(mathRandom(1), mathRandom(1), mathRandom(1));\n    particleContainer.add(particle);\n    particles.add(particle);\n  }\n\n  // 랜덤 값을 반환하는 함수 정의\n  function mathRandom(num = 1) {\n    var numValue = -Math.random() * num + Math.random() * num;\n    return numValue;\n  }\n  scene.add(particles);\n  const animate = () => {\n    requestAnimationFrame(animate);\n    particles.rotation.x += 0.005;\n    particles.rotation.y += 0.005;\n    renderer.render(scene, camera);\n  };\n  animate();\n  const onWindowResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  };\n  window.addEventListener(\"resize\", onWindowResize);\n};\n_c = CreateParticle;\nexport default CreateParticle;\nvar _c;\n$RefreshReg$(_c, \"CreateParticle\");","map":{"version":3,"names":["THREE","CreateParticle","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","setSize","document","body","appendChild","domElement","particles","Object3D","i","particle","Mesh","SphereGeometry","MeshToonMaterial","color","side","DoubleSide","phi","Math","random","PI","theta","radius","set","MahRandom","mathRandom","rotation","particleContainer","add","num","numValue","animate","requestAnimationFrame","x","y","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","_c","$RefreshReg$"],"sources":["/Users/yoojin/Documents/GitHub/simacro/testwork/simacro/src/Components/CreateParticle.js"],"sourcesContent":["import * as THREE from \"three\";\n\nconst CreateParticle = () => {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  );\n  camera.position.z = 5;\n\n  const renderer = new THREE.WebGLRenderer({ alpha: true });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  const particles = new THREE.Object3D();\n\n  for (let i = 0; i < 200; i++) {\n    const particle = new THREE.Mesh(\n      new THREE.SphereGeometry(0.01, 3),\n      new THREE.MeshToonMaterial({\n        color: 0x004fff,\n        side: THREE.DoubleSide,\n      }) // 흰색 파티클\n    );\n    const phi = Math.random() * Math.PI * 2;\n    const theta = Math.random() * Math.PI;\n\n    const radius = 2; // 원의 반지름\n    particle.position.set(MahRandom(3), mathRandom(3), mathRandom(3));\n    particle.rotation.set(mathRandom(1), mathRandom(1), mathRandom(1));\n    particleContainer.add(particle);\n    particles.add(particle);\n  }\n\n  // 랜덤 값을 반환하는 함수 정의\n  function mathRandom(num = 1) {\n    var numValue = -Math.random() * num + Math.random() * num;\n    return numValue;\n  }\n\n  scene.add(particles);\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n\n    particles.rotation.x += 0.005;\n    particles.rotation.y += 0.005;\n\n    renderer.render(scene, camera);\n  };\n\n  animate();\n\n  const onWindowResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  };\n\n  window.addEventListener(\"resize\", onWindowResize);\n};\n\nexport default CreateParticle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}