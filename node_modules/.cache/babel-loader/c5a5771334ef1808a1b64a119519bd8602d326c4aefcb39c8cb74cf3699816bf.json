{"ast":null,"code":"var _jsxFileName = \"/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  model\n}) {\n  _s();\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [loadedModel, setLoadedModel] = useState(null);\n  useEffect(() => {\n    // 기존 캔버스 엘리먼트 제거\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(light);\n    scene.background = new THREE.Color(\"white\");\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(model, gltf => {\n      const loadedModel = gltf.scene;\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n\n      // 로드가 완료되면 animate 함수 실행\n      animate();\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (loadedModel) {\n        loadedModel.rotation.x += 0.005;\n        loadedModel.rotation.y += 0.005;\n      }\n      renderer.render(scene, camera);\n    };\n  }, [model, modelScale]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"EtACqWrxke9T1TwtqATmUyjvnlw=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","GLTFLoader","jsxDEV","_jsxDEV","ModelViewer","model","_s","containerRef","modelScale","setModelScale","loadedModel","setLoadedModel","container","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","light","AmbientLight","add","background","Color","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","loader","load","gltf","scale","animate","requestAnimationFrame","rotation","x","y","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoojin/Desktop/testwork/simacro/src/ModelViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\n\nfunction ModelViewer({ model }) {\n  const containerRef = useRef();\n  const [modelScale, setModelScale] = useState(1);\n  const [loadedModel, setLoadedModel] = useState(null);\n\n  useEffect(() => {\n    // 기존 캔버스 엘리먼트 제거\n    const container = containerRef.current;\n    while (container.firstChild) {\n      container.removeChild(container.firstChild);\n    }\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 800);\n\n    const light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(light);\n\n    scene.background = new THREE.Color(\"white\");\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load(model, (gltf) => {\n      const loadedModel = gltf.scene;\n      loadedModel.scale.set(modelScale, modelScale, modelScale);\n      scene.add(loadedModel);\n      setLoadedModel(loadedModel);\n\n      // 로드가 완료되면 animate 함수 실행\n      animate();\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (loadedModel) {\n        loadedModel.rotation.x += 0.005;\n        loadedModel.rotation.y += 0.005;\n      }\n      renderer.render(scene, camera);\n    };\n  }, [model, modelScale]);\n\n  return <div ref={containerRef}></div>;\n}\n\nexport default ModelViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,SAAS,GAAGL,YAAY,CAACM,OAAO;IACtC,OAAOD,SAAS,CAACE,UAAU,EAAE;MAC3BF,SAAS,CAACG,WAAW,CAACH,SAAS,CAACE,UAAU,CAAC;IAC7C;IAEA,MAAME,KAAK,GAAG,IAAIhB,KAAK,CAACiB,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIlB,KAAK,CAACmB,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAE9B,MAAMC,KAAK,GAAG,IAAIzB,KAAK,CAAC0B,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjDV,KAAK,CAACW,GAAG,CAACF,KAAK,CAAC;IAEhBT,KAAK,CAACY,UAAU,GAAG,IAAI5B,KAAK,CAAC6B,KAAK,CAAC,OAAO,CAAC;IAE3C,MAAMC,QAAQ,GAAG,IAAI9B,KAAK,CAAC+B,aAAa,CAAC;MACvCC,SAAS,EAAE;IACb,CAAC,CAAC;IACFF,QAAQ,CAACG,OAAO,CAACb,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDf,YAAY,CAACM,OAAO,CAACqB,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IAErD,MAAMC,MAAM,GAAG,IAAInC,UAAU,CAAC,CAAC;IAC/BmC,MAAM,CAACC,IAAI,CAAChC,KAAK,EAAGiC,IAAI,IAAK;MAC3B,MAAM5B,WAAW,GAAG4B,IAAI,CAACtB,KAAK;MAC9BN,WAAW,CAAC6B,KAAK,CAACf,GAAG,CAAChB,UAAU,EAAEA,UAAU,EAAEA,UAAU,CAAC;MACzDQ,KAAK,CAACW,GAAG,CAACjB,WAAW,CAAC;MACtBC,cAAc,CAACD,WAAW,CAAC;;MAE3B;MACA8B,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,MAAMA,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B,IAAI9B,WAAW,EAAE;QACfA,WAAW,CAACgC,QAAQ,CAACC,CAAC,IAAI,KAAK;QAC/BjC,WAAW,CAACgC,QAAQ,CAACE,CAAC,IAAI,KAAK;MACjC;MACAd,QAAQ,CAACe,MAAM,CAAC7B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACb,KAAK,EAAEG,UAAU,CAAC,CAAC;EAEvB,oBAAOL,OAAA;IAAK2C,GAAG,EAAEvC;EAAa;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvC;AAAC5C,EAAA,CAtDQF,WAAW;AAAA+C,EAAA,GAAX/C,WAAW;AAwDpB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}